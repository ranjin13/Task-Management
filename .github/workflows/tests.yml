name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug
          extensions: pdo, pdo_pgsql, gd

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Configure Environment
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=testing" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Publish Ziggy Configuration
        run: php artisan ziggy:generate

      - name: Build Assets
        run: npm run build

      - name: Configure Testing Environment
        run: |
          echo "APP_ENV=testing" > .env.testing
          echo "DB_CONNECTION=pgsql" >> .env.testing
          echo "DB_HOST=localhost" >> .env.testing
          echo "DB_PORT=5432" >> .env.testing
          echo "DB_DATABASE=testing" >> .env.testing
          echo "DB_USERNAME=postgres" >> .env.testing
          echo "DB_PASSWORD=postgres" >> .env.testing
          echo "CACHE_DRIVER=array" >> .env.testing
          echo "SESSION_DRIVER=array" >> .env.testing
          echo "QUEUE_CONNECTION=sync" >> .env.testing

      - name: Generate Application Key for Testing
        run: |
          # Generate a key directly for the testing environment
          php artisan key:generate --env=testing --force
          # Verify the key was generated
          echo "Testing environment APP_KEY:"
          grep APP_KEY .env.testing

      - name: Debug Information
        run: |
          php --version
          php -m | grep -E 'gd|pgsql'
          php artisan --version

      - name: Clear Caches
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear

      # Tests are now enabled
      - name: Tests
        run: php artisan test --env=testing
      
      # - name: Skip Tests
      #   run: echo "Tests are temporarily skipped"
